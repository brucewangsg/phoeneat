<div id="app" class="jumbotron">
</div>

<script type="text/javascript">
$(document).ready(function () {
  formApp = new Vue({
    el : '#app',
    template : "\
    <div class='jumbotron'>\
      <h2>Shorten your URL</h2>\
      <form action='shorten' v-on:submit.stop.prevent='onSubmitted'>\
        <input v-model='url' class='cc-field' ref='field' v-on:blur='fieldBlurred' v-on:keyup='keyup' v-on:focus='fieldFocused' type='text' style='width : 100%; line-height : 32px; font-size : 28px; margin-bottom : 10px;' placeholder='https://'/>\
        <input v-if='urlValid && shouldShowSubmitButton' type='submit' value='Shorten URL'/>\
      </form>\
      <div v-if='shortened_url' style='margin-bottom : 20px;'>Shortened URL : <a v-bind:href='shortened_url' target='_blank'>{{ shortened_url }}</a></div>\
      <div v-if='shortened_url'>Simple Stats : <a v-bind:href='shortenedInfoURL' target='_blank'>{{ shortenedInfoURL }}</a></div>\
      <div v-if='shortened_url'><strong>API</strong> : curl 'http://{{currentHost}}/api/transform' --data 'url={{this.url}}'</a></div>\
      <div v-if='error'>Error : {{ error }}</div>\
    </div>",
    data : {
      url : "",
      shortened_url : "",
      error : "",
      lookupURL : "",
      submittedURL : ""
    },
    watch : {
      url : function (oldValue, newValue) {
        this.shortened_url = '';
      }
    },
    mounted : function () {
      this.$refs.field = $(this.$el).find('.cc-field')[0];
    },
    computed : {
      shouldShowSubmitButton : function () {
        return this.shortened_url == "";
      },
      urlValid : function () {
        return this.isURLValid(this.url);
      },
      currentHost : function () {
        return (window.location+'').split('://')[1].split('/')[0]
      },
      shortenedInfoURL : function () {
        return this.shortened_url + "/info";
      }
    },
    methods : {
      isURLValid : function (url) {
        return (url+"").indexOf("://") > 0;
      },
      fieldBlurred : function () {
        if (this.url == "") {
          this.url = "http://"
        }
      },
      fieldFocused : function () {
        this.$refs.field.selectionStart = 0;
        this.$refs.field.selectionEnd = this.url.length;
      },
      keyup : function () {
        if (((this.url+'').length <= 4 && ("http").indexOf(this.url+'') < 0) || 
            ((this.url+'').length > 4 && (this.url+'').indexOf('http') < 0)) {
          var selectionStart = this.$refs.field.selectionStart;
          var selectionEnd = this.$refs.field.selectionEnd;

          var oThis = this;
          Vue.nextTick(function () {
            oThis.url = 'https://' + oThis.url;

            var cursorAdjustment = ('https://').length;
            selectionStart += cursorAdjustment;
            selectionEnd += cursorAdjustment;

            oThis.$refs.field.selectionStart = selectionStart;
            oThis.$refs.field.selectionEnd = selectionEnd;
          });
        }

        this.quickLookup();
      },

      // handle URL submission
      //
      onSubmitted : function () {
        var oThis = this;
        this.submittedURL = this.url;
        $.post("/api/transform", { url : this.url }, function (info) {
          oThis.error = "";
          oThis.shortened_url = "";

          if (oThis.url+"" == oThis.submittedURL+"") {
            if ("shortcode" in info) {
              oThis.shortened_url = oThis.noHTTPSonLocal(info.shortcode);
            } else if ("error" in info) {
              oThis.error = info.error;
            }
          }
        });
      },

      // quick lookup in case this URL has been transformed before
      //
      quickLookup : function () {
        var oThis = this;
        this.lookupURL = this.url;
        $.post("/api/lookup", { url : this.url }, function (info) {
          // URL remained the same
          if (oThis.url+"" == oThis.lookupURL+"") {
            if ("shortcode" in info) {
              oThis.shortened_url = oThis.noHTTPSonLocal(info.shortcode);
            }
          }
        });
      },

      // if local, don't serve HTTPS link 
      //
      noHTTPSonLocal : function (url) {
        if ((window.location + "").indexOf("localhost")) {
          return url.replace("https://", "http://");
        }
        return url;
      }
    }
  });

});
</script>